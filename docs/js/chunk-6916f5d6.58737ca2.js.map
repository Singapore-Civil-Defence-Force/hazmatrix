{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./src/views/Search.vue?16ac","webpack:///./node_modules/fuse.js/dist/fuse.esm.js","webpack:///src/views/Search.vue","webpack:///./src/views/Search.vue?536d","webpack:///./src/views/Search.vue","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js"],"names":["$","$values","values","target","stat","O","module","exports","Object","is","x","y","classof","regexpExec","R","S","exec","result","call","TypeError","render","_vm","this","_h","$createElement","_c","_self","staticStyle","staticClass","_v","directives","name","rawName","value","expression","ref","attrs","domProps","on","$event","composing","search_input","clearSearchInput","_s","results","length","_l","key","item","params","id","formula","un","shareViaWebShare","_e","staticRenderFns","isArray","Array","getTag","INFINITY","baseToString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","undefined","isBlank","trim","prototype","toString","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","keys","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","keyId","JSON","stringify","path","src","createKeyPath","createKeyId","Error","split","join","get","list","arr","deepGet","index","i","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","a","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","getFn","ignoreLocation","ignoreFieldNorm","Config","SPACE","norm","mantissa","cache","Map","m","Math","pow","numTokens","match","has","sqrt","n","parseFloat","round","set","clear","FuseIndex","isCreated","setIndexRecords","docs","records","_keysMap","doc","docIndex","_addString","_addObject","size","splice","record","v","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","setKeys","map","setSources","create","parseIndex","data","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","charAt","isMatch","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","allIndices","totalScore","hasMatches","BaseMatch","getMatch","multiRegex","singleRegex","exp","matches","ExactMatch","super","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","searchIn","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","MultiMatchSet","Set","type","ExtendedSearch","_","numMatches","qLen","pLen","constructor","registeredSearchers","register","args","createSearcher","searcherClass","condition","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore$1","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","add","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","sort","slice","evaluate","_findMatches","getValueForItemAtKeyId","res","child","resultMap","expResults","version","config","search_options","computed","fuse","methods","$refs","searchField","focus","navigator","share","title","chemicalName","url","component","DESCRIPTORS","objectKeys","toIndexedObject","propertyIsEnumerable","f","createMethod","TO_ENTRIES","it","entries","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","RegExp","String","done","rx","previousLastIndex","lastIndex","regexpFlags","stickyHelpers","nativeExec","nativeReplace","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","str","reCopy","re","sticky","flags","source","charsAdded","strCopy","multiline","input","global","arguments","fails","RE","s","proto","forced","that","ignoreCase","dotAll","unicode","redefine","wellKnownSymbol","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","REPLACE_KEEPS_$0","REPLACE","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","string","arg"],"mappings":"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","file":"js/chunk-6916f5d6.58737ca2.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"cloumns is-multiline\"},[_c('div',{staticClass:\"column is-full\"},[_c('label',[_c('b',[_vm._v(\"Search (Chemical name or UN Number)\")]),_c('div',{staticClass:\"field has-addons\"},[_c('div',{staticClass:\"control is-expanded\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search_input),expression:\"search_input\"}],ref:\"searchField\",staticClass:\"input\",staticStyle:{\"width\":\"100%\"},attrs:{\"autofocus\":'autofocus',\"type\":\"text\",\"placeholder\":\"E.g. Acetone or 1090\",\"required\":\"\"},domProps:{\"value\":(_vm.search_input)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.search_input=$event.target.value}}})]),_c('div',{staticClass:\"control\"},[_c('button',{staticClass:\"button\",on:{\"click\":_vm.clearSearchInput}},[_vm._v(\"clear\")])])])])]),_vm._v(\" \"+_vm._s(_vm.results.length)+\" \"+_vm._s(_vm.results)+\" \"),_vm._l((_vm.results),function(result){return _c('div',{key:result.item.name,staticClass:\"column\"},[_c('div',{staticClass:\"card px-4\"},[_c('router-link',{staticClass:\"card-content content\",attrs:{\"to\":{ name: 'chemical', params: { id: result.item.id } }}},[_c('h1',[_vm._v(_vm._s(result.item.name))]),_c('p',{staticClass:\"subtitle mb-1\"},[_vm._v(\" Formula: \"),_c('b',[_vm._v(_vm._s(result.item.formula || \"NA\"))])]),_c('p',{staticClass:\"subtitle\"},[_vm._v(\" UN Number: \"),_c('b',[_vm._v(_vm._s(result.item.un || \"NA\"))])])]),_c('footer',{staticClass:\"card-footer\",on:{\"click\":function($event){return _vm.shareViaWebShare(result.item.id, result.item.name)}}},[_c('span',{staticClass:\"card-footer-item\",staticStyle:{\"cursor\":\"pointer\",\"color\":\"pink\"}},[_vm._v(\" Share \")])])],1)])}),(_vm.results.length === 0 && _vm.search_input !== '')?_c('div',{staticClass:\"center\"},[_vm._v(\" Nothing matched your input \")]):_vm._e()],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","<template>\n  <div style=\"text-align: left\">\n    <!-- @todo Include the side nav bar component -->\n\n    <!-- Allow multiple line in desktop / landscape mode -->\n    <div class=\"cloumns is-multiline\">\n      <!-- is-full to fill up column space when in desktop / landscape mode -->\n      <div class=\"column is-full\">\n        <label>\n          <b>Search (Chemical name or UN Number)</b>\n\n          <div class=\"field has-addons\">\n            <div class=\"control is-expanded\">\n              <!-- @todo Auto focus not working when the site first loads, not sure if because of local HTTPS invalid cert issue -->\n              <!-- @todo NO, it is not working for the deployed version too, it just doesnt work on IOS safari, to test on other mobile devices.. chrome desktop works -->\n              <input\n                :autofocus=\"'autofocus'\"\n                ref=\"searchField\"\n                type=\"text\"\n                v-model=\"search_input\"\n                placeholder=\"E.g. Acetone or 1090\"\n                required\n                class=\"input\"\n                style=\"width: 100%\"\n              />\n            </div>\n            <div class=\"control\">\n              <button class=\"button\" @click=\"clearSearchInput\">clear</button>\n            </div>\n          </div>\n        </label>\n      </div>\n\n      {{ results.length }}\n      {{ results }}\n\n      <!-- Search results -->\n      <div v-for=\"result in results\" :key=\"result.item.name\" class=\"column\">\n        <div class=\"card px-4\">\n          <!-- Display the card content in a router-link element to make the card's content section clickable -->\n          <router-link\n            :to=\"{ name: 'chemical', params: { id: result.item.id } }\"\n            class=\"card-content content\"\n          >\n            <h1>{{ result.item.name }}</h1>\n\n            <p class=\"subtitle mb-1\">\n              Formula: <b>{{ result.item.formula || \"NA\" }}</b>\n            </p>\n            <p class=\"subtitle\">\n              UN Number: <b>{{ result.item.un || \"NA\" }}</b>\n            </p>\n          </router-link>\n\n          <footer\n            class=\"card-footer\"\n            @click=\"shareViaWebShare(result.item.id, result.item.name)\"\n          >\n            <span class=\"card-footer-item\" style=\"cursor: pointer; color: pink\">\n              Share\n            </span>\n          </footer>\n        </div>\n      </div>\n\n      <!-- Show no results UI if no results and search input is not empty -->\n      <div v-if=\"results.length === 0 && search_input !== ''\" class=\"center\">\n        Nothing matched your input\n        <!-- @todo Allow user to report this as an issue to get this new item added or something -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport chemicals from \"../../data/chemicals.json\";\nimport Fuse from \"fuse.js\";\n\nexport default {\n  name: \"search\",\n\n  // @todo Allow sharing of searches, before you choose a chemical, in fact every stage should be shareable\n  // props: [\"num\"],\n\n  // @todo Only if search view is shareable\n  // Run search method on component creation\n  // created() {\n  //   this.search();\n  // },\n\n  data() {\n    return {\n      search_options: {\n        // @todo Allow search for formula?\n        // Search in `name` and in `un` number array\n        keys: [\"name\", \"un\"],\n      },\n\n      search_input: \"\",\n    };\n  },\n\n  computed: {\n    // Update fuse object when search options is updated\n    fuse() {\n      return new Fuse(Object.values(chemicals), this.search_options);\n    },\n\n    // Continously search as user input changes\n    results() {\n      // Limit max number of returned search results to ensure not too many results are returned (esp for lower spec mobile devices),\n      // especially at the start of the search where alot of results will be matched when only 1 - 4 characters are entered\n      return this.fuse.search(this.search_input, { limit: 20 });\n    },\n  },\n\n  // @todo Fn to report missing chemical\n  methods: {\n    // Clear the search input box and re-focus on the search field\n    clearSearchInput() {\n      this.search_input = \"\";\n      this.$refs.searchField.focus();\n    },\n\n    shareViaWebShare(chemicalID, chemicalName) {\n      // @todo Await this to show in UI when sharing succeeded\n      navigator.share({\n        title: \"Share this chemical\",\n        text: chemicalName,\n        url: `https://singapore-civil-defence-force.github.io/hazmatrix/#/chemical/${chemicalID}`,\n      });\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=07654c72&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\n// eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n"],"sourceRoot":""}